/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI.Forum;

import Business.Forum.ForumTopic;
import Business.Forum.Reply;
import Business.Person.Patient;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class ManageReplyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageReplyJPanel
     */
    private JPanel userProcessContainer;
    private Patient patient;
    private ForumTopic ft;
    private Reply reply;
    public ManageReplyJPanel(JPanel upc, Patient p, ForumTopic ft) {
        initComponents();
        userProcessContainer=upc;
        patient=p;
        this.ft=ft;
        
        populateReplyTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void populateReplyTable() {

        DefaultTableModel dtm = (DefaultTableModel) replyjTable2.getModel();
        dtm.setRowCount(0);

//        if(ft.getReplyList().isEmpty())
//        {
//            JOptionPane.showMessageDialog(null, "No replies found.");
//            return;
//        }
        Object[] row = new Object[4];
        for (Reply re : ft.getReplyList()) {
            {
                row[0] = re.getPatient();
                row[1] = re;
                row[2] = re.getCommentList().size();
                row[3] = re.getReply();

                dtm.addRow(row);
            }
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        viewReplyjTextArea2 = new javax.swing.JTextArea();
        addCommentjButton1 = new javax.swing.JButton();
        viewReplyjButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        replyjTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        writeReplyjTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        commentjButton1 = new javax.swing.JButton();
        commentjTextField1 = new javax.swing.JTextField();
        sendjButton1 = new javax.swing.JButton();
        viewCommentsjButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewCommentjTextArea1 = new javax.swing.JTextArea();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewReplyjTextArea2.setEditable(false);
        viewReplyjTextArea2.setColumns(20);
        viewReplyjTextArea2.setRows(5);
        jScrollPane4.setViewportView(viewReplyjTextArea2);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 240, 85));

        addCommentjButton1.setText("Post Reply");
        addCommentjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCommentjButton1ActionPerformed(evt);
            }
        });
        add(addCommentjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, 117, 34));

        viewReplyjButton1.setText("View Reply>>");
        viewReplyjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewReplyjButton1ActionPerformed(evt);
            }
        });
        add(viewReplyjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        jLabel1.setText("Replies:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 11, -1, -1));

        replyjTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Replied By", "Replied On", "Comments count", "Reply"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(replyjTable2);
        if (replyjTable2.getColumnModel().getColumnCount() > 0) {
            replyjTable2.getColumnModel().getColumn(2).setPreferredWidth(40);
            replyjTable2.getColumnModel().getColumn(3).setPreferredWidth(200);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 31, 634, 93));

        writeReplyjTextArea1.setColumns(20);
        writeReplyjTextArea1.setRows(5);
        jScrollPane1.setViewportView(writeReplyjTextArea1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, 538, 82));

        jLabel2.setText("Give your reply here:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        commentjButton1.setText("Comment");
        commentjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentjButton1ActionPerformed(evt);
            }
        });
        add(commentjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, -1));

        commentjTextField1.setEnabled(false);
        add(commentjTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 170, -1));

        sendjButton1.setText("Send");
        sendjButton1.setEnabled(false);
        sendjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendjButton1ActionPerformed(evt);
            }
        });
        add(sendjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, -1, -1));

        viewCommentsjButton1.setText("View Comments>>");
        viewCommentsjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCommentsjButton1ActionPerformed(evt);
            }
        });
        add(viewCommentsjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 140, -1));

        viewCommentjTextArea1.setEditable(false);
        viewCommentjTextArea1.setColumns(20);
        viewCommentjTextArea1.setRows(5);
        jScrollPane3.setViewportView(viewCommentjTextArea1);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 240, 90));
    }// </editor-fold>//GEN-END:initComponents

    private void viewReplyjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewReplyjButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = replyjTable2.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }
        Reply r = (Reply) replyjTable2.getValueAt(selectedRow, 1);
        viewReplyjTextArea2.setText(r.getReply());
    }//GEN-LAST:event_viewReplyjButton1ActionPerformed

    private void addCommentjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCommentjButton1ActionPerformed
        // TODO add your handling code here:
        String reply = writeReplyjTextArea1.getText();
        if (reply.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Message Text cannot be empty.");
            return;
        }
        Reply re = new Reply();
        re.setPatient(patient);
        re.setReply(reply);
        re.setReplyDate(new Date());
        
        ft.getReplyList().add(re);
        
        populateReplyTable();
    }//GEN-LAST:event_addCommentjButton1ActionPerformed

    private void commentjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentjButton1ActionPerformed
        // TODO add your handling code here:

        commentjTextField1.setEnabled(true);
        sendjButton1.setEnabled(true);
        
        
    }//GEN-LAST:event_commentjButton1ActionPerformed

    private void sendjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendjButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = replyjTable2.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }
        
        
        String comment = commentjTextField1.getText();
        if(comment.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Comment field cannot be empty.");
            return;
        }
        Reply r = (Reply) replyjTable2.getValueAt(selectedRow, 1);
        Reply repc = new Reply();
        repc.setPatient(patient);
        repc.setReply(comment);
        repc.setReplyDate(new Date());
        
        r.getCommentList().add(repc);
        
        viewCommentsjButton1ActionPerformed(evt);
        commentjTextField1.setText("");
        commentjTextField1.setEnabled(false);
        sendjButton1.setEnabled(false);
        
    }//GEN-LAST:event_sendjButton1ActionPerformed

    private void viewCommentsjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCommentsjButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = replyjTable2.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }
        Reply r = (Reply) replyjTable2.getValueAt(selectedRow, 1);
        
        viewCommentjTextArea1.setText("");
        for(Reply re : r.getCommentList())
        {
            viewCommentjTextArea1.append(re.getPatient().getFirstName().toUpperCase()+" : "+re.getReply()+"\n");
        }
    }//GEN-LAST:event_viewCommentsjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCommentjButton1;
    private javax.swing.JButton commentjButton1;
    private javax.swing.JTextField commentjTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable replyjTable2;
    private javax.swing.JButton sendjButton1;
    private javax.swing.JTextArea viewCommentjTextArea1;
    private javax.swing.JButton viewCommentsjButton1;
    private javax.swing.JButton viewReplyjButton1;
    private javax.swing.JTextArea viewReplyjTextArea2;
    private javax.swing.JTextArea writeReplyjTextArea1;
    // End of variables declaration//GEN-END:variables
}
