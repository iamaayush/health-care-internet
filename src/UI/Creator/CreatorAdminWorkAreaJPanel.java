/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI.Creator;

import Business.Creator;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.DrugRegulatoryOrganization;
import Business.Organization.ICDOrganization;
import Business.Organization.Organization;
import UI.AdministrativeRole.ManageOrganizationJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Aayush
 */
public class CreatorAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreatorAdminWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private Creator creator;
    private Organization druRegOrg;
    private Organization iCDOrg;
    public CreatorAdminWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        creator=system.getCreator();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageDoctorjButton1 = new javax.swing.JButton();
        manageOrganizationJButton = new javax.swing.JButton();
        manageIFDAemployeejButton1 = new javax.swing.JButton();
        manageICDEmployeejButton1 = new javax.swing.JButton();

        manageDoctorjButton1.setText("Manage Doctor");
        manageDoctorjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageDoctorjButton1ActionPerformed(evt);
            }
        });

        manageOrganizationJButton.setText("Manage Organization");
        manageOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrganizationJButtonActionPerformed(evt);
            }
        });

        manageIFDAemployeejButton1.setText("Manage IFDA employee");
        manageIFDAemployeejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageIFDAemployeejButton1ActionPerformed(evt);
            }
        });

        manageICDEmployeejButton1.setText("Manage ICD employee");
        manageICDEmployeejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageICDEmployeejButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(manageOrganizationJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manageDoctorjButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manageIFDAemployeejButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(manageICDEmployeejButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(manageOrganizationJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(manageDoctorjButton1)
                .addGap(51, 51, 51)
                .addComponent(manageIFDAemployeejButton1)
                .addGap(40, 40, 40)
                .addComponent(manageICDEmployeejButton1)
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void manageDoctorjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageDoctorjButton1ActionPerformed
        // TODO add your handling code here:
        boolean flag=false;
        for(Organization o : creator.getOrganizationDirectory().getOrganizationList())
        {
            if(o instanceof DoctorOrganization)
            {
                flag=true;
            }
        }
            if(flag)
            {
        ManageDoctorJPanel mdjp = new ManageDoctorJPanel(userProcessContainer,creator);
        userProcessContainer.add("manageDoctorJPanel",mdjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
            }
            else {
                JOptionPane.showMessageDialog(null, "Create Doctor Organization.");
                return;
            }
    }//GEN-LAST:event_manageDoctorjButton1ActionPerformed

    private void manageOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrganizationJButtonActionPerformed

        ManageOrganizationJPanel manageOrganizationJPanel = new ManageOrganizationJPanel(userProcessContainer, creator);
        userProcessContainer.add("manageOrganizationJPanel", manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageOrganizationJButtonActionPerformed

    private void manageIFDAemployeejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageIFDAemployeejButton1ActionPerformed
        // TODO add your handling code here:
        boolean flag = false;
        for(Organization o : creator.getOrganizationDirectory().getOrganizationList())
        {
            if(o instanceof DrugRegulatoryOrganization)
            {
                flag=true;
                druRegOrg = o;
            }
        }
        if(!flag)
        {
            JOptionPane.showMessageDialog(null, "Add Drug Regulatory Organization.");
            return;
        }
        ManageIFDAEmployee miejp = new ManageIFDAEmployee(userProcessContainer,druRegOrg);
        userProcessContainer.add("manageDrugRegulatoryJPanel", miejp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageIFDAemployeejButton1ActionPerformed

    private void manageICDEmployeejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageICDEmployeejButton1ActionPerformed
        // TODO add your handling code here:
        
        boolean flag = false;
        for(Organization o : creator.getOrganizationDirectory().getOrganizationList())
        {
            if(o instanceof ICDOrganization)
            {
                flag=true;
                iCDOrg = o;
            }
        }
        if(!flag)
        {
            JOptionPane.showMessageDialog(null, "Add Internation Classification of Diseases Organization.");
            return;
        }
        ManageICDemployee mie = new ManageICDemployee(userProcessContainer, iCDOrg);
        userProcessContainer.add("ManageICDemployee", mie);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_manageICDEmployeejButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton manageDoctorjButton1;
    private javax.swing.JButton manageICDEmployeejButton1;
    private javax.swing.JButton manageIFDAemployeejButton1;
    private javax.swing.JButton manageOrganizationJButton;
    // End of variables declaration//GEN-END:variables
}
