/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.PatientRole;

import Business.Person.Patient;
import Business.WorkQueue.DoctorToLabWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class SeeMyLabResultsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SeeMyLabResultsJPanel
     */
    private JPanel userProcessContainer;
    private Patient patient;

    public SeeMyLabResultsJPanel(JPanel upc, Patient patient) {
        initComponents();
        userProcessContainer = upc;
        this.patient = patient;

        populateTable();
    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) labTestResultsjTable1.getModel();

        dtm.setRowCount(0);

        for (WorkRequest req : patient.getWorkQueue().getWorkRequestList()) {
            if (req instanceof DoctorToLabWorkRequest) {
                DoctorToLabWorkRequest dlwr = (DoctorToLabWorkRequest) req;
                Object[] row = new Object[6];
                row[0] = dlwr;
                row[1] = dlwr.getRequestDate();
                row[2] = dlwr.getReceiver()== null ? "pending" : dlwr.getReceiver();
                row[3] = dlwr.getStatus()== null ? "pending" : dlwr.getStatus();
                row[4] = dlwr.getResolveDate()== null ? "not yet decided" : dlwr.getResolveDate();
                row[5] = dlwr.getResult()== null ? "pending" : dlwr.getResult();

                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        labTestResultsjTable1 = new javax.swing.JTable();
        viewResultInDetailjButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewResultjTextArea1 = new javax.swing.JTextArea();
        backjButton3 = new javax.swing.JButton();

        labTestResultsjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Request Date", "Receiver", "Status", "Resolve Date", "Result"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(labTestResultsjTable1);

        viewResultInDetailjButton1.setText("View Result in Detail");
        viewResultInDetailjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewResultInDetailjButton1ActionPerformed(evt);
            }
        });

        viewResultjTextArea1.setColumns(20);
        viewResultjTextArea1.setRows(5);
        viewResultjTextArea1.setEnabled(false);
        jScrollPane2.setViewportView(viewResultjTextArea1);

        backjButton3.setText("<< Back");
        backjButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(viewResultInDetailjButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backjButton3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(viewResultInDetailjButton1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backjButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewResultInDetailjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewResultInDetailjButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = labTestResultsjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }

        WorkRequest request = (WorkRequest) labTestResultsjTable1.getValueAt(selectedRow, 0);
        if (request instanceof DoctorToLabWorkRequest) {
            DoctorToLabWorkRequest dlwr = (DoctorToLabWorkRequest) request;

            viewResultInDetailjButton1.setEnabled(true);
            viewResultjTextArea1.setText(dlwr.getResult());
        }
    }//GEN-LAST:event_viewResultInDetailjButton1ActionPerformed

    private void backjButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton3ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton backjButton2;
    private javax.swing.JButton backjButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable labTestResultsjTable1;
    private javax.swing.JButton viewResultInDetailjButton1;
    private javax.swing.JTextArea viewResultjTextArea1;
    // End of variables declaration//GEN-END:variables
}
