/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.PatientRole;

import Business.Enterprise.Enterprise;
import Business.Person.Patient;
import Business.Pharmacy.Drug;
import Business.WorkQueue.DoctorToPharmacyWorkRequest;
import Business.WorkQueue.PatientDrugFeedbackWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class SeePharmacyWorkRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SeePharmacyWorkRequestsJPanel
     */
    private JPanel userProcessContainer;
    private Patient patient;

    public SeePharmacyWorkRequestsJPanel(JPanel upc, Patient patient) {
        initComponents();
        userProcessContainer = upc;
        this.patient = patient;
        drugjTable1.setVisible(false);

        populateTable();
    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) workRequestjTable1.getModel();

        dtm.setRowCount(0);

        for (WorkRequest request : patient.getWorkQueue().getWorkRequestList()) {
            if (request instanceof DoctorToPharmacyWorkRequest) {
                DoctorToPharmacyWorkRequest dpwr = (DoctorToPharmacyWorkRequest) request;
                Object[] row = new Object[6];
                row[0] = dpwr.getEnterprise();
                row[1] = dpwr;
                row[2] = dpwr.getRequestDate();
                row[3] = dpwr.getStatus() == null ? "pending" : dpwr.getStatus();
                row[4] = dpwr.getResolveDate() == null ? "pending" : dpwr.getResolveDate();

                dtm.addRow(row);
            }
        }
    }

    private void populateDrugTable() {
        int row = workRequestjTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        } else {
            
            WorkRequest r = (WorkRequest) workRequestjTable1.getValueAt(row, 1);

            DefaultTableModel dtm = (DefaultTableModel) drugjTable1.getModel();

            dtm.setRowCount(0);

            if (r instanceof DoctorToPharmacyWorkRequest) {
                DoctorToPharmacyWorkRequest dpwr = (DoctorToPharmacyWorkRequest) r;
                for (Drug dr : dpwr.getEncounterDrugList()) {
                    Object[] rw = new Object[2];
                    rw[0] = dr.getDrugID();
                    rw[1] = dr;
                    
                    dtm.addRow(rw);
                }
            }
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestjTable1 = new javax.swing.JTable();
        backjButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        drugjTable1 = new javax.swing.JTable();
        viewDrugsjButton1 = new javax.swing.JButton();
        messagejTextField1 = new javax.swing.JTextField();
        sendjButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        viewMedicalGuidelinesjButton1 = new javax.swing.JButton();

        workRequestjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Enterprise", "Prescription", "Request Date", "Status", "Delivery Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestjTable1);

        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        drugjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Drug ID", "Drug Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        drugjTable1.setEnabled(false);
        jScrollPane2.setViewportView(drugjTable1);

        viewDrugsjButton1.setText("View Drugs");
        viewDrugsjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDrugsjButton1ActionPerformed(evt);
            }
        });

        sendjButton1.setText("SEND");
        sendjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendjButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Message:");

        jLabel2.setText("Send feedback to company:");

        viewMedicalGuidelinesjButton1.setText("View Medical Guidelines>>");
        viewMedicalGuidelinesjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMedicalGuidelinesjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(backjButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(viewDrugsjButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(33, 33, 33)
                                .addComponent(messagejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(sendjButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(viewMedicalGuidelinesjButton1)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewDrugsjButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewMedicalGuidelinesjButton1)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendjButton1)
                    .addComponent(messagejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void viewDrugsjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDrugsjButton1ActionPerformed
        // TODO add your handling code here:

//        int row = workRequestjTable1.getSelectedRow();
//        if (row < 0) {
//            JOptionPane.showMessageDialog(null, "select a row");
//            return;
//        } else {
//
//            DefaultTableModel dtm = (DefaultTableModel) workRequestjTable1.getModel();
//
//            dtm.setRowCount(0);
//
//            WorkRequest r = (WorkRequest) workRequestjTable1.getValueAt(row, 1);
//
//            drugjTable1.setVisible(true);
//
//            if (r instanceof DoctorToPharmacyWorkRequest) {
//                DoctorToPharmacyWorkRequest dpwr = (DoctorToPharmacyWorkRequest) r;
//                for (Drug dr : dpwr.getEncounterDrugList()) {
//                    Object[] rw = new Object[2];
//                    rw[0] = dr.getDrugID();
//                    rw[1] = dr;
//                    
//                    dtm.addRow(rw);
//                }
//            }
//        }

        populateDrugTable();
    }//GEN-LAST:event_viewDrugsjButton1ActionPerformed

    private void sendjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendjButton1ActionPerformed
        // TODO add your handling code here:
        String message = messagejTextField1.getText();

        if (message.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Message cannot be empty.");
            return;
        }
        int row = drugjTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
        } else {
            Drug drug = (Drug) drugjTable1.getValueAt(row, 1);

            PatientDrugFeedbackWorkRequest pdf = new PatientDrugFeedbackWorkRequest();
            pdf.setDrug(drug);
            pdf.setSender(patient);
            pdf.setMessage(message);
            Enterprise ent = drug.getManufacturingCompany();
            ent.getWorkQueue().getWorkRequestList().add(pdf);
        }
    }//GEN-LAST:event_sendjButton1ActionPerformed

    private void viewMedicalGuidelinesjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMedicalGuidelinesjButton1ActionPerformed
        // TODO add your handling code here:

        int row = drugjTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
        } else {
            Drug drug = (Drug) drugjTable1.getValueAt(row, 1);

            ViewMedicalGuidelinesJPanel vmgjp = new ViewMedicalGuidelinesJPanel(userProcessContainer, drug);
            userProcessContainer.add("ViewMedicalGuideJP", vmgjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }

    }//GEN-LAST:event_viewMedicalGuidelinesjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JTable drugjTable1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField messagejTextField1;
    private javax.swing.JButton sendjButton1;
    private javax.swing.JButton viewDrugsjButton1;
    private javax.swing.JButton viewMedicalGuidelinesjButton1;
    private javax.swing.JTable workRequestjTable1;
    // End of variables declaration//GEN-END:variables
}
