/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.SystemAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.NetworkCity;
import Business.Network.NetworkCountry;
import Business.Network.NetworkState;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;

    public ManageEnterpriseJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateTable();
        populateCountryComboBox();
        populateEnterpriseComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterprisejTable1.getModel();
        model.setRowCount(0);

        for (NetworkCountry networkCountry : system.getCountryNetworkList()) {
            for (NetworkState networkState : networkCountry.getStateList()) {
                for (NetworkCity networkCity : networkState.getCityList()) {
                    for (Enterprise enterprise : networkCity.getEnterpriseDirectory().getEnterpriseList()) {
                        Object[] row = new Object[5];
                        row[0] = enterprise;
                        row[1] = enterprise.getEnterpriseType().getValue();
                        row[2] = networkCountry;
                        row[3] = networkState;
                        row[4] = networkCity;
                        model.addRow(row);
                    }

                }
            }
        }
    }

    private void populateCountryComboBox() {
        countryjComboBox1.removeAllItems();
        for (NetworkCountry networkCountry : system.getCountryNetworkList()) {
            countryjComboBox1.addItem(networkCountry);
        }
        populateStateComboBox();
    }

    private void populateStateComboBox() {
        statejComboBox2.removeAllItems();
        NetworkCountry nc = (NetworkCountry) countryjComboBox1.getSelectedItem();
        if (nc != null) {
            for (NetworkState networkState : nc.getStateList()) {
                statejComboBox2.addItem(networkState);
            }
            populateCityComboBox();
        }
    }

    private void populateCityComboBox() {
        cityjComboBox3.removeAllItems();
        NetworkState ns = (NetworkState) statejComboBox2.getSelectedItem();
        if (ns != null) {
            for (NetworkCity networkCity : ns.getCityList()) {
                cityjComboBox3.addItem(networkCity);
            }
        }
    }

    private void populateEnterpriseComboBox() {
        enterprisejComboBox4.removeAllItems();
        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            if (!(type.equals(Enterprise.EnterpriseType.GlobalAuthority))) {
                enterprisejComboBox4.addItem(type);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterprisejTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        countryjComboBox1 = new javax.swing.JComboBox();
        statejComboBox2 = new javax.swing.JComboBox();
        cityjComboBox3 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        enterprisejComboBox4 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        enterpriseNamejTextField1 = new javax.swing.JTextField();
        submitjButton1 = new javax.swing.JButton();
        deletejButton1 = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();
        manageAdminjButton1 = new javax.swing.JButton();

        enterprisejTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Enterprise name", "Type", "Country", "State", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterprisejTable1);

        jLabel1.setText("Country:");

        jLabel2.setText("State:");

        jLabel3.setText("City:");

        countryjComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        countryjComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryjComboBox1ActionPerformed(evt);
            }
        });

        statejComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        statejComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statejComboBox2ActionPerformed(evt);
            }
        });

        cityjComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Enterprise Type:");

        enterprisejComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Name:");

        submitjButton1.setText("Submit");
        submitjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitjButton1ActionPerformed(evt);
            }
        });

        deletejButton1.setText("Delete");
        deletejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButton1ActionPerformed(evt);
            }
        });

        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        manageAdminjButton1.setText("Manage Enterprise Admin");
        manageAdminjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageAdminjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backjButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(deletejButton1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(submitjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(countryjComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(statejComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cityjComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(enterprisejComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(enterpriseNamejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(manageAdminjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deletejButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(countryjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageAdminjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(statejComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cityjComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(enterprisejComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(enterpriseNamejTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(backjButton1)
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitjButton1ActionPerformed
        // TODO add your handling code here:
        NetworkCity networkCity = (NetworkCity) cityjComboBox3.getSelectedItem();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterprisejComboBox4.getSelectedItem();

        if (networkCity == null) {
            JOptionPane.showMessageDialog(null, "Add City to the network first.");
            return;
        }
        if (type == null) {
            JOptionPane.showMessageDialog(null, "Invalid Type selected");
            return;
        }

        String name = enterpriseNamejTextField1.getText();
        if (name.matches("")) {
            JOptionPane.showMessageDialog(null, "Field cannot be left empty.");
            return;
        }
        for (Enterprise enterprise : networkCity.getEnterpriseDirectory().getEnterpriseList()) {
            if (name.equalsIgnoreCase(enterprise.getName())) {
                String Jop = "This Enterprise already exists in " + networkCity;
                JOptionPane.showMessageDialog(null, Jop);
                return;
            }
        }
        enterpriseNamejTextField1.setText("");
        Enterprise enterprise = networkCity.getEnterpriseDirectory().createAndAddEnterprise(name, type);
        populateTable();


    }//GEN-LAST:event_submitjButton1ActionPerformed

    private void deletejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButton1ActionPerformed
        // TODO add your handling code here:
        int row = enterprisejTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
        } else {
            int selectedValue = JOptionPane.showConfirmDialog(null, "Are you Sure you want to Delete?", "WARNING", JOptionPane.YES_NO_OPTION);

            if (selectedValue == JOptionPane.YES_OPTION) {
                NetworkCity networkCity = (NetworkCity) enterprisejTable1.getValueAt(row, 4);
                Enterprise enterprise = (Enterprise) enterprisejTable1.getValueAt(row, 0);

                networkCity.getEnterpriseDirectory().removeEnterprise(enterprise);
                populateTable();
            }
        }
    }//GEN-LAST:event_deletejButton1ActionPerformed

    private void countryjComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryjComboBox1ActionPerformed
        // TODO add your handling code here:
        populateStateComboBox();
    }//GEN-LAST:event_countryjComboBox1ActionPerformed

    private void statejComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statejComboBox2ActionPerformed
        // TODO add your handling code here:
        populateCityComboBox();
    }//GEN-LAST:event_statejComboBox2ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void manageAdminjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageAdminjButton1ActionPerformed
        // TODO add your handling code here:
        int row = enterprisejTable1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
        } else {
            Enterprise enterprise = (Enterprise) enterprisejTable1.getValueAt(row, 0);
            ManageEnterpriseAdmin mea = new ManageEnterpriseAdmin(userProcessContainer, system, enterprise);
            userProcessContainer.add("ManageEnterpriseAdminJPanel", mea);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);

        }
    }//GEN-LAST:event_manageAdminjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JComboBox cityjComboBox3;
    private javax.swing.JComboBox countryjComboBox1;
    private javax.swing.JButton deletejButton1;
    private javax.swing.JTextField enterpriseNamejTextField1;
    private javax.swing.JComboBox enterprisejComboBox4;
    private javax.swing.JTable enterprisejTable1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton manageAdminjButton1;
    private javax.swing.JComboBox statejComboBox2;
    private javax.swing.JButton submitjButton1;
    // End of variables declaration//GEN-END:variables
}
