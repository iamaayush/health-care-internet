/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.LabRole;

import Business.Enterprise.Enterprise;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorToLabWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class LabTestWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabTestWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;

    public LabTestWorkAreaJPanel(JPanel upc, UserAccount ua, Enterprise enterprise) {
        initComponents();
        userProcessContainer = upc;
        userAccount = ua;
        this.enterprise = enterprise;

        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) labTestResultsjTable1.getModel();

        dtm.setRowCount(0);

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof LabOrganization) {
                for (WorkRequest req : org.getWorkQueue().getWorkRequestList()) {
                    if (req instanceof DoctorToLabWorkRequest) {
                        DoctorToLabWorkRequest dlwr = (DoctorToLabWorkRequest) req;
                        Object[] row = new Object[6];
                        row[0] = dlwr.getMRN();
                        row[1] = dlwr;
                        row[2] = dlwr.getStatus() == null ? "pending" : dlwr.getStatus();
                        row[3] = dlwr.getRequestDate();
                        row[4] = dlwr.getResult()== null ? "pending" : dlwr.getResult();
                        row[5] = dlwr.getReceiver()== null ? "pending" : dlwr.getReceiver();

                        dtm.addRow(row);
                    }
                }
            }
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        labTestResultsjTable1 = new javax.swing.JTable();
        processjButton1 = new javax.swing.JButton();
        assignToMejButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultjTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        completejButton1 = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();

        labTestResultsjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "MRN", "Message", "Status", "Request Date", "Result", "Receiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(labTestResultsjTable1);

        processjButton1.setText("Process");
        processjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processjButton1ActionPerformed(evt);
            }
        });

        assignToMejButton2.setText("Assign to me");
        assignToMejButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMejButton2ActionPerformed(evt);
            }
        });

        resultjTextArea1.setColumns(20);
        resultjTextArea1.setRows(5);
        jScrollPane2.setViewportView(resultjTextArea1);

        jLabel1.setText("Result:");

        completejButton1.setText("Complete");
        completejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completejButton1ActionPerformed(evt);
            }
        });

        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(completejButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backjButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(assignToMejButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(processjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(9, 9, 9))))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignToMejButton2)
                    .addComponent(processjButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addComponent(completejButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignToMejButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMejButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = labTestResultsjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }

        WorkRequest request = (WorkRequest) labTestResultsjTable1.getValueAt(selectedRow, 1);
        if (request instanceof DoctorToLabWorkRequest) {
            DoctorToLabWorkRequest dlwr = (DoctorToLabWorkRequest) request;

            dlwr.setReceiver(userAccount.getPerson());

        }
        populateTable();
    }//GEN-LAST:event_assignToMejButton2ActionPerformed

    private void processjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processjButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = labTestResultsjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }

        WorkRequest request = (WorkRequest) labTestResultsjTable1.getValueAt(selectedRow, 1);
        if (request instanceof DoctorToLabWorkRequest) {
            DoctorToLabWorkRequest dlwr = (DoctorToLabWorkRequest) request;

            if (dlwr.getReceiver() == null) {
                JOptionPane.showMessageDialog(null, "Assign the task first");
                return;
            } else {
                dlwr.setStatus("processing");
            }
        }
        populateTable();
    }//GEN-LAST:event_processjButton1ActionPerformed

    private void completejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completejButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = labTestResultsjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }
        String resultMessage = resultjTextArea1.getText();

        WorkRequest request = (WorkRequest) labTestResultsjTable1.getValueAt(selectedRow, 1);
        if (request instanceof DoctorToLabWorkRequest) {
            DoctorToLabWorkRequest dlwr = (DoctorToLabWorkRequest) request;

            if (!"processing".equalsIgnoreCase(dlwr.getStatus())) {
                JOptionPane.showMessageDialog(null, "Not set for processing");
                return;
            } else {
                if (!"".equals(resultMessage)) {
                    dlwr.setResult(resultMessage);
                    dlwr.setResolveDate(new Date());
                    dlwr.setStatus("Completed");
                } else {
                    JOptionPane.showMessageDialog(null, "Result cannot be empty");
                    return;
                }
            }
        }
        populateTable();
    }//GEN-LAST:event_completejButton1ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMejButton2;
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton completejButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable labTestResultsjTable1;
    private javax.swing.JButton processjButton1;
    private javax.swing.JTextArea resultjTextArea1;
    // End of variables declaration//GEN-END:variables
}
