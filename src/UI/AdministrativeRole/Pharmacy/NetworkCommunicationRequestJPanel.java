/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.AdministrativeRole.Pharmacy;

import Business.Creator;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Network.NetworkCity;
import Business.Network.NetworkCountry;
import Business.Network.NetworkState;
import Business.Organization.Organization;
import Business.Person.Doctor;
import Business.Person.Patient;
import Business.Person.Person;
import Business.WorkQueue.PharmaCompanybroadcastWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class NetworkCommunicationRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NetworkCommunicationRequestJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem system;

    public NetworkCommunicationRequestJPanel(JPanel upc, Enterprise enterprise, EcoSystem system) {
        initComponents();
        userProcessContainer = upc;
        this.enterprise = enterprise;
        this.system = system;

        populateTable();

    }

    private void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) broadcastjTable1.getModel();
        dtm.setRowCount(0);

        Object[] row = new Object[3];
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
            if (request instanceof PharmaCompanybroadcastWorkRequest) {
                PharmaCompanybroadcastWorkRequest pcbwr = (PharmaCompanybroadcastWorkRequest) request;

                {
                    row[0] = pcbwr.getRequestDate();
                    row[1] = pcbwr.getRecipients();
                    row[2] = pcbwr;

                    dtm.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messagejTextArea1 = new javax.swing.JTextArea();
        sendjButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        broadcastjTable1 = new javax.swing.JTable();
        recipientsjComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        backjButton1 = new javax.swing.JButton();

        jLabel1.setText("Message :");

        messagejTextArea1.setColumns(20);
        messagejTextArea1.setRows(5);
        jScrollPane1.setViewportView(messagejTextArea1);

        sendjButton1.setText("Broadcast Message");
        sendjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendjButton1ActionPerformed(evt);
            }
        });

        broadcastjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Date of broadcast", "Recipients", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(broadcastjTable1);

        recipientsjComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Patients", "Doctors", "Pharmacies" }));

        jLabel2.setText("Recepients:");

        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(sendjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(recipientsjComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(backjButton1)))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipientsjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(sendjButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void sendjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendjButton1ActionPerformed
        // TODO add your handling code here:

        String message = messagejTextArea1.getText();
        if (message.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Message cannot be empty");
            return;
        }

        String recipients = (String) recipientsjComboBox1.getSelectedItem();

        PharmaCompanybroadcastWorkRequest pcbwr = new PharmaCompanybroadcastWorkRequest();

        pcbwr.setEnterpriseName(enterprise.getName());
        pcbwr.setMessage(message);
        pcbwr.setRequestDate(new Date());
        pcbwr.setRecipients(recipients);
        
        enterprise.getWorkQueue().getWorkRequestList().add(pcbwr);

        Creator creator = system.getCreator();
        for (NetworkCountry nc : system.getCountryNetworkList()) {
            for (NetworkState ns : nc.getStateList()) {
                for (NetworkCity ncity : ns.getCityList()) {
                    for (Enterprise enterprise : ncity.getEnterpriseDirectory().getEnterpriseList()) {
                        if (recipients.equals("Pharmacies")) {
                            if (enterprise instanceof PharmacyEnterprise) {
                                enterprise.getWorkQueue().getWorkRequestList().add(pcbwr);
                            }

                        }
                    }
                }
            }
        }

        for (Organization org : creator.getOrganizationDirectory().getOrganizationList()) {
            for (Person person : org.getPersonDirectory().getPersonList()) {
                if (recipients.equals("Doctors")) {
                    if (person instanceof Doctor) {
                        person.getWorkQueue().getWorkRequestList().add(pcbwr);
                    }
                }
                if (recipients.equals("Patients")) {
                    if (person instanceof Patient) {
                        person.getWorkQueue().getWorkRequestList().add(pcbwr);
                    }
                }
            }
        }
        populateTable();
    }//GEN-LAST:event_sendjButton1ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JTable broadcastjTable1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea messagejTextArea1;
    private javax.swing.JComboBox recipientsjComboBox1;
    private javax.swing.JButton sendjButton1;
    // End of variables declaration//GEN-END:variables
}
