/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.AdministrativeRole.Pharmacy;

import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Pharmacy.Drug;
import Business.WorkQueue.DoctorToPharmacyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class ManagePharmacyWorkRequestNewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePharmacyWorkRequestNewJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private PharmacyEnterprise pharmacy;
    private DoctorToPharmacyWorkRequest dpwr;

    public ManagePharmacyWorkRequestNewJPanel(JPanel upc, Enterprise enterprise) {
        initComponents();
        userProcessContainer = upc;
        this.enterprise = enterprise;

        populateTable();
    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) pharmacyRequestjTable1.getModel();

        dtm.setRowCount(0);

        if (enterprise instanceof PharmacyEnterprise) {
            pharmacy = (PharmacyEnterprise) enterprise;

            for (WorkRequest request : pharmacy.getWorkQueue().getWorkRequestList()) {
                if (request instanceof DoctorToPharmacyWorkRequest) {
                    dpwr = (DoctorToPharmacyWorkRequest) request;
                    Object[] row = new Object[5];
                    row[0] = dpwr.getPatient();
                    row[1] = dpwr.getDoctor();
                    row[2] = dpwr.getEnterprise();
                    row[3] = dpwr;
                    row[4] = dpwr.getStatus();

                    dtm.addRow(row);
                }
            }
        }
    }

    private void populateDetailsTable() {
        DefaultTableModel dtm = (DefaultTableModel) detailsjTable1.getModel();

        dtm.setRowCount(0);

        int selectedRow = pharmacyRequestjTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a Row.");
            return;
        } else {
            WorkRequest wr = (WorkRequest) pharmacyRequestjTable1.getValueAt(selectedRow, 3);

            if (wr instanceof DoctorToPharmacyWorkRequest) {
                DoctorToPharmacyWorkRequest dp = (DoctorToPharmacyWorkRequest) wr;
                Object[] row = new Object[5];
                row[0] = dp;
                row[1] = dp.getPatient().getAddressline1();
                row[2] = dp.getPatient().getCity();
                row[3] = dp.getPatient().getState();
                row[4] = dp.getPatient().getCountry();

                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pharmacyRequestjTable1 = new javax.swing.JTable();
        viewDetailsjButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        detailsjTable1 = new javax.swing.JTable();
        backjButton2 = new javax.swing.JButton();
        prescribedDrugsjButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        drugsjTextArea1 = new javax.swing.JTextArea();

        pharmacyRequestjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient", "Doctor", "Enterprise", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pharmacyRequestjTable1);

        viewDetailsjButton1.setText("View Details");
        viewDetailsjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsjButton1ActionPerformed(evt);
            }
        });

        detailsjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Prescription", "Address", "City", "State", "Country"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(detailsjTable1);

        backjButton2.setText("<< Back");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });

        prescribedDrugsjButton1.setText("Prescribed Drugs>>");
        prescribedDrugsjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescribedDrugsjButton1ActionPerformed(evt);
            }
        });

        drugsjTextArea1.setColumns(20);
        drugsjTextArea1.setRows(5);
        jScrollPane3.setViewportView(drugsjTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(backjButton2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(361, 361, 361)
                                .addComponent(prescribedDrugsjButton1)
                                .addGap(31, 31, 31))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(viewDetailsjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prescribedDrugsjButton1)
                        .addGap(37, 37, 37)
                        .addComponent(viewDetailsjButton1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backjButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailsjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsjButton1ActionPerformed
        // TODO add your handling code here:

        populateDetailsTable();

    }//GEN-LAST:event_viewDetailsjButton1ActionPerformed

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton2ActionPerformed

    private void prescribedDrugsjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescribedDrugsjButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = pharmacyRequestjTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a Row.");
            return;
        } else {
            WorkRequest wr = (WorkRequest) pharmacyRequestjTable1.getValueAt(selectedRow, 3);

            if (wr instanceof DoctorToPharmacyWorkRequest) {
                DoctorToPharmacyWorkRequest dp = (DoctorToPharmacyWorkRequest) wr;

                drugsjTextArea1.setText("");
                for (Drug drug : dp.getEncounterDrugList()) {
                    drugsjTextArea1.append(drug.getDrugName() + "\n");
                }
            }
        }
    }//GEN-LAST:event_prescribedDrugsjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton2;
    private javax.swing.JTable detailsjTable1;
    private javax.swing.JTextArea drugsjTextArea1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable pharmacyRequestjTable1;
    private javax.swing.JButton prescribedDrugsjButton1;
    private javax.swing.JButton viewDetailsjButton1;
    // End of variables declaration//GEN-END:variables
}
