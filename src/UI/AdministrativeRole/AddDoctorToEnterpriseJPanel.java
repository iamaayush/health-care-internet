/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.AdministrativeRole;

import Business.EcoSystem;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Enterprise.PharmaceuticalCompanyEnterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Network.NetworkCity;
import Business.Network.NetworkCountry;
import Business.Network.NetworkState;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Person.Doctor;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aayush
 */
public class AddDoctorToEnterpriseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddDoctorToEnterpriseJPanel
     */
    private JPanel userProcessContainer;
    private Organization organization;
    private EcoSystem system;
    private Enterprise enterprise;
    private Organization entOrg;

    public AddDoctorToEnterpriseJPanel(JPanel userProcessContainer, Enterprise ent, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        if ((ent instanceof HospitalEnterprise) || (ent instanceof ClinicEnterprise)) {
            enterprise = ent;
        }
        this.system = system;

        for (Organization org : system.getCreator().getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof DoctorOrganization) {
                organization = org;
            }
        }
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (org instanceof DoctorOrganization) {
                this.entOrg = org;
            }
        }
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void populateTable() {
        if (organization.getUserAccountDirectory().getUserAccountList().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No UserAccounts found.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) doctorjTable1.getModel();

        model.setRowCount(0);

        for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()) {
            if (userAccount.getPerson() instanceof Doctor) {
                Person person = userAccount.getPerson();
                Doctor doctor = (Doctor) person;
                Object[] row = new Object[4];
                row[0] = doctor.getDoctorLiscenceID();
                row[1] = doctor;
                row[2] = doctor.getSpeciality();
                row[3] = person;
                model.addRow(row);
            }
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        doctorjTable1 = new javax.swing.JTable();
        addjButton1 = new javax.swing.JButton();
        backjButton1 = new javax.swing.JButton();

        doctorjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doctor Liscence ID", "Doctor Name", "Specialization", "Unique ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(doctorjTable1);

        addjButton1.setText("ADD");
        addjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addjButton1ActionPerformed(evt);
            }
        });

        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(backjButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(addjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(addjButton1)
                .addGap(51, 51, 51)
                .addComponent(backjButton1)
                .addContainerGap(291, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addjButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = doctorjTable1.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "select a row");
            return;
        }
        Doctor doctor = (Doctor) doctorjTable1.getValueAt(selectedRow, 1);
        Person pd = (Doctor) doctor;
        for (Person p : entOrg.getPersonDirectory().getPersonList()) {
            if (pd.equals(p)) {
                JOptionPane.showMessageDialog(null, "Doctor already added.");
                return;
            }
        }
        doctor.getMyEnterpriseList().add(enterprise);
        entOrg.getPersonDirectory().getPersonList().add(doctor);
        JOptionPane.showMessageDialog(null, "Doctor added successfully.");
    }//GEN-LAST:event_addjButton1ActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addjButton1;
    private javax.swing.JButton backjButton1;
    private javax.swing.JTable doctorjTable1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
